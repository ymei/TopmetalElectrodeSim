function out = model
%
% HexCellTMnFocusElectrode.m
%
% Model exported on Nov 27 2015, 01:52 by COMSOL 5.1.0.234.

import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath('/home/ymei/Work/UltrafastImaging/TopmetalElectrodeSim');

model.label('HexCellTMnFocusElectrode.mph');

model.comments(['HexCellTMnFocusElectrode\n\n']);

model.param.set('HexCell_width', '5[mm]', 'Hex cell width (edge)');
model.param.set('HexCell_height', '20[mm]', 'Hex cell height');
model.param.set('Chip_width', '6[mm]', 'Topmetal Chip width');
model.param.set('Chip_length', '5[mm]', 'Topmetal Chip length');
model.param.set('Chip_thickness', '0.71[mm]', 'Topmetal Chip thickness');
model.param.set('ChipSubstrate_thickness', '0.7[mm]', 'thickness of silicon substrate');
model.param.set('TMElectrode_thickness', '0.01[mm]', 'thickness of the TM Electrode');
model.param.set('TMElectrode_diameter', '1[mm]', 'diameter of the TM Electrode');
model.param.set('TMElectrode_x', '0.0[mm]', 'x position of TM electrode');
model.param.set('TMElectrode_y', '0.0[mm]', 'y position of TM electrode');
model.param.set('TMElectrode_insulator_opening_diameter', '0.8[mm]', 'Opening in the passivation layer for TM Electrode');
model.param.set('FocusElectrodeHole_diameter', '5.0[mm]', 'hole diameter of the focusing electrode');
model.param.set('FocusElectrode_thickness', '0.1[mm]', 'thickness of focusing electrode');
model.param.set('TM_Focus_Electrode_d', '3[mm]', 'distance between top surface of TM electrode and bottom surface of focusing electrode');
model.param.set('BondingWire_diameter', '0.05[mm]', 'diameter of bonding wire');
model.param.set('BondingWire_pitch', '0.2[mm]', 'pitch between adjacent bonding wires');
model.param.set('BondingWire_Chip_d', '0.05[mm]', 'distance of bonding wire from the edge of Chip');
model.param.set('V_TMElectrode', '0.5[V]', 'voltage on TM electrode');
model.param.set('V_FocusElectrode', '-2700[V]', 'voltage on focusing electrode');
model.param.set('V_Cathode', '-3240[V]', 'voltage on cathode');
model.param.set('TMElectrode_mesh_min', '0.005[mm]', 'electrode minimum mesh');
model.param.set('TMElectrode_mesh_max', '0.1[mm]', 'electrode maximum mesh');
model.param.set('FocusElectrode_mesh_min', '0.05[mm]', 'mesh minimum');
model.param.set('FocusElectrode_mesh_max', '1[mm]', 'mesh maximum');
model.param.set('V_TMElectrode1', '1[V]', 'for calculating weighting field and induced charge on electrode');
model.param.set('V_FocusElectrode1', '0[V]', 'for calculating weighting field');
model.param.set('V_Cathode1', '0[V]', 'for calculating weighting field');

model.modelNode.create('comp1');
model.modelNode('comp1').defineLocalCoord(false);

model.file.clear;

model.geom.create('geom1', 3);

model.mesh.create('mesh1', 'geom1');

model.geom('geom1').lengthUnit('mm');
model.geom('geom1').geomRep('comsol');
model.geom('geom1').create('wp1', 'WorkPlane');
model.geom('geom1').feature('wp1').geom.create('b1', 'BezierPolygon');
model.geom('geom1').feature('wp1').geom.feature('b1').label('unit cell');
model.geom('geom1').feature('wp1').geom.feature('b1').set('p', {'-HexCell_width' '-HexCell_width/2.0' 'HexCell_width/2.0' 'HexCell_width' 'HexCell_width/2.0' '-HexCell_width/2.0' '-HexCell_width'; '0' 'HexCell_width/2*sqrt(3)' 'HexCell_width/2*sqrt(3)' '0' '-HexCell_width/2.0*sqrt(3)' '-HexCell_width/2*sqrt(3)' '0'});
model.geom('geom1').feature('wp1').geom.feature('b1').set('degree', {'1' '1' '1' '1' '1' '1'});
model.geom('geom1').feature('wp1').geom.feature('b1').set('w', {'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1'});
model.geom('geom1').feature('wp1').set('workplane3d', true);
model.geom('geom1').feature('wp1').set('unite', 'on');
model.geom('geom1').create('ext4', 'Extrude');
model.geom('geom1').feature('ext4').label('World');
model.geom('geom1').feature('ext4').setIndex('distance', 'HexCell_height', 0);
model.geom('geom1').feature('ext4').selection('input').set({'wp1'});
model.geom('geom1').create('wp2', 'WorkPlane');
model.geom('geom1').feature('wp2').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp2').geom.feature('r1').set('base', 'center');
model.geom('geom1').feature('wp2').geom.feature('r1').set('size', {'Chip_width' 'Chip_length'});
model.geom('geom1').feature('wp2').set('workplane3d', true);
model.geom('geom1').feature('wp2').set('unite', 'on');
model.geom('geom1').create('ext1', 'Extrude');
model.geom('geom1').feature('ext1').label('Topmetal Chip');
model.geom('geom1').feature('ext1').setIndex('distance', 'Chip_thickness', 0);
model.geom('geom1').feature('ext1').selection('input').set({'wp2'});
model.geom('geom1').create('wp7', 'WorkPlane');
model.geom('geom1').feature('wp7').geom.create('r1', 'Rectangle');
model.geom('geom1').feature('wp7').geom.feature('r1').set('base', 'center');
model.geom('geom1').feature('wp7').geom.feature('r1').set('size', {'Chip_width' 'Chip_length'});
model.geom('geom1').feature('wp7').set('unite', 'on');
model.geom('geom1').create('ext6', 'Extrude');
model.geom('geom1').feature('ext6').label('Silicon Substrate');
model.geom('geom1').feature('ext6').set('unite', false);
model.geom('geom1').feature('ext6').setIndex('distance', 'ChipSubstrate_thickness', 0);
model.geom('geom1').feature('ext6').selection('input').set({'wp7'});
model.geom('geom1').create('wp3', 'WorkPlane');
model.geom('geom1').feature('wp3').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp3').geom.feature('c1').set('r', 'TMElectrode_diameter/2.0');
model.geom('geom1').feature('wp3').geom.feature('c1').set('pos', {'TMElectrode_x' 'TMElectrode_y'});
model.geom('geom1').feature('wp3').set('workplane3d', true);
model.geom('geom1').feature('wp3').set('unite', 'on');
model.geom('geom1').feature('wp3').set('quickz', 'ChipSubstrate_thickness-TMElectrode_thickness');
model.geom('geom1').create('ext3', 'Extrude');
model.geom('geom1').feature('ext3').label('TMElectrode');
model.geom('geom1').feature('ext3').setIndex('distance', 'TMElectrode_thickness', 0);
model.geom('geom1').feature('ext3').selection('input').set({'wp3'});
model.geom('geom1').create('wp8', 'WorkPlane');
model.geom('geom1').feature('wp8').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp8').geom.feature('c1').set('r', 'TMElectrode_insulator_opening_diameter/2.0');
model.geom('geom1').feature('wp8').geom.feature('c1').set('pos', {'TMElectrode_x' 'TMElectrode_y'});
model.geom('geom1').feature('wp8').set('workplane3d', true);
model.geom('geom1').feature('wp8').set('unite', 'on');
model.geom('geom1').feature('wp8').set('quickz', 'ChipSubstrate_thickness');
model.geom('geom1').create('ext7', 'Extrude');
model.geom('geom1').feature('ext7').label('TMElectrode Opening');
model.geom('geom1').feature('ext7').setIndex('distance', 'Chip_thickness-ChipSubstrate_thickness', 0);
model.geom('geom1').feature('ext7').selection('input').set({'wp8'});
model.geom('geom1').create('dif1', 'Difference');
model.geom('geom1').feature('dif1').label('Topmetal Chip with Opening');
model.geom('geom1').feature('dif1').selection('input').set({'ext1'});
model.geom('geom1').feature('dif1').selection('input2').set({'ext7'});
model.geom('geom1').create('wp4', 'WorkPlane');
model.geom('geom1').feature('wp4').geom.create('b2', 'BezierPolygon');
model.geom('geom1').feature('wp4').geom.feature('b2').label('Focusing Electrode Cell');
model.geom('geom1').feature('wp4').geom.feature('b2').set('p', {'-HexCell_width' '-HexCell_width/2.0' 'HexCell_width/2.0' 'HexCell_width' 'HexCell_width/2.0' '-HexCell_width/2.0' '-HexCell_width'; '0' 'HexCell_width/2*sqrt(3)' 'HexCell_width/2*sqrt(3)' '0' '-HexCell_width/2.0*sqrt(3)' '-HexCell_width/2*sqrt(3)' '0'});
model.geom('geom1').feature('wp4').geom.feature('b2').set('degree', {'1' '1' '1' '1' '1' '1'});
model.geom('geom1').feature('wp4').geom.feature('b2').set('w', {'1' '1' '1' '1' '1' '1' '1' '1' '1' '1'  ...
'1' '1'});
model.geom('geom1').feature('wp4').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp4').geom.feature('c1').label('Focusing Electrode Hole');
model.geom('geom1').feature('wp4').geom.feature('c1').set('r', 'FocusElectrodeHole_diameter/2');
model.geom('geom1').feature('wp4').geom.feature('c1').set('pos', {'TMElectrode_x' 'TMElectrode_y'});
model.geom('geom1').feature('wp4').geom.create('dif1', 'Difference');
model.geom('geom1').feature('wp4').geom.feature('dif1').label('Focusing Electrode Unit');
model.geom('geom1').feature('wp4').geom.feature('dif1').selection('input').set({'b2'});
model.geom('geom1').feature('wp4').geom.feature('dif1').selection('input2').set({'c1'});
model.geom('geom1').feature('wp4').set('unite', 'on');
model.geom('geom1').feature('wp4').set('quickz', 'ChipSubstrate_thickness+TM_Focus_Electrode_d');
model.geom('geom1').create('ext5', 'Extrude');
model.geom('geom1').feature('ext5').label('Focusing Electrode');
model.geom('geom1').feature('ext5').setIndex('distance', 'FocusElectrode_thickness', 0);
model.geom('geom1').feature('ext5').selection('input').set({'wp4'});
model.geom('geom1').create('wp5', 'WorkPlane');
model.geom('geom1').feature('wp5').geom.create('c1', 'Circle');
model.geom('geom1').feature('wp5').geom.feature('c1').set('r', 'BondingWire_diameter/2');
model.geom('geom1').feature('wp5').geom.feature('c1').set('pos', {'-Chip_width/2 + BondingWire_Chip_d' '0'});
model.geom('geom1').feature('wp5').set('unite', 'on');
model.geom('geom1').feature('wp5').set('quickz', 'Chip_thickness');
model.geom('geom1').create('wp6', 'WorkPlane');
model.geom('geom1').feature('wp6').geom.create('b1', 'BezierPolygon');
model.geom('geom1').feature('wp6').geom.feature('b1').set('type', 'open');
model.geom('geom1').feature('wp6').geom.feature('b1').set('p', {'-Chip_width/2 + BondingWire_Chip_d' '-Chip_width/2 +BondingWire_Chip_d-0.2' '-Chip_width/2 +BondingWire_Chip_d-0.4' '-Chip_width/2 +BondingWire_Chip_d-0.6' '-Chip_width/2 +BondingWire_Chip_d-0.6'; 'Chip_thickness' 'Chip_thickness+0.4' 'Chip_thickness' 'Chip_thickness/2' '0'});
model.geom('geom1').feature('wp6').geom.feature('b1').set('degree', {'2' '2'});
model.geom('geom1').feature('wp6').geom.feature('b1').set('w', {'1' '0.5' '1' '1' '1/sqrt(2)' '1'});
model.geom('geom1').feature('wp6').set('unite', 'on');
model.geom('geom1').feature('wp6').set('quickplane', 'xz');
model.geom('geom1').create('swe1', 'Sweep');
model.geom('geom1').feature('swe1').label('bonding wire');
model.geom('geom1').feature('swe1').selection('diredge').set('wp6.b1', [1]);
model.geom('geom1').feature('swe1').selection('face').set('wp5.c1', [1]);
model.geom('geom1').feature('swe1').selection('edge').set('wp6.b1', [1 2]);
model.geom('geom1').create('arr1', 'Array');
model.geom('geom1').feature('arr1').label('Array Bonding Wire');
model.geom('geom1').feature('arr1').set('size', '10');
model.geom('geom1').feature('arr1').set('type', 'linear');
model.geom('geom1').feature('arr1').set('displ', {'0' 'BondingWire_pitch' '0'});
model.geom('geom1').feature('arr1').selection('input').set({'swe1'});
model.geom('geom1').create('mir1', 'Mirror');
model.geom('geom1').feature('mir1').label('Mirror Bonding Wire');
model.geom('geom1').feature('mir1').set('keep', true);
model.geom('geom1').feature('mir1').set('axis', {'0' '1' '0'});
model.geom('geom1').feature('mir1').selection('input').set({'arr1'});
model.geom('geom1').create('mir2', 'Mirror');
model.geom('geom1').feature('mir2').label('Mirror Bonding Wire 2');
model.geom('geom1').feature('mir2').set('keep', true);
model.geom('geom1').feature('mir2').set('axis', {'1' '0' '0'});
model.geom('geom1').feature('mir2').selection('input').set({'arr1' 'mir1'});
model.geom('geom1').run;
model.geom('geom1').run('fin');

model.selection.create('sel3', 'Explicit');
model.selection('sel3').set([43]);
model.selection.create('sel7', 'Explicit');
model.selection('sel7').set([3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81]);
model.selection.create('sel1', 'Explicit');
model.selection('sel1').set([2]);
model.selection.create('sel2', 'Explicit');
model.selection('sel2').set([41 43]);
model.selection.create('sel8', 'Explicit');
model.selection('sel8').set([42]);
model.selection.create('sel12', 'Explicit');
model.selection('sel12').set([2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81]);
model.selection.create('com2', 'Complement');
model.selection.create('es1_dst_pc1', 'Explicit');
model.selection.create('es1_dst_pc2', 'Explicit');
model.selection.create('es1_dst_pc3', 'Explicit');
model.selection.create('es1_dst_pc4', 'Explicit');
model.selection.create('es1_dst_pc5', 'Explicit');
model.selection.create('es1_dst_pc6', 'Explicit');
model.selection.create('sel9', 'Explicit');
model.selection('sel9').geom('geom1', 3, 2, {'exterior'});
model.selection('sel9').set([43]);
model.selection.create('sel10', 'Explicit');
model.selection('sel10').geom('geom1', 3, 2, {'exterior'});
model.selection('sel10').set([3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81]);
model.selection.create('sel11', 'Explicit');
model.selection('sel11').geom('geom1', 3, 2, {'exterior'});
model.selection('sel11').set([2]);
model.selection('sel3').label('TMElectrode');
model.selection('sel3').label('Explicit 3');
model.selection('sel7').label('Bonding wires');
model.selection('sel7').label('Explicit 7');
model.selection('sel1').label('Focusing Electrode');
model.selection('sel1').label('Explicit 1');
model.selection('sel2').label('Silicon Substrate');
model.selection('sel2').label('Explicit 2');
model.selection('sel8').label('Passivation layer');
model.selection('sel8').label('Explicit 8');
model.selection('sel12').label('Metal');
model.selection('sel12').label('Explicit 12');
model.selection('com2').set('input', {'sel3' 'sel7' 'sel1' 'sel2' 'sel8'});
model.selection('com2').label('Gas volume');
model.selection('es1_dst_pc1').label('Explicit 1.1');
model.selection('es1_dst_pc1').label('Explicit 1.2');
model.selection('es1_dst_pc2').label('Explicit 2.1');
model.selection('es1_dst_pc2').label('Explicit 2.2');
model.selection('es1_dst_pc3').label('Explicit 3.1');
model.selection('es1_dst_pc3').label('Explicit 3.2');
model.selection('sel9').label('TMELectrode Boundaries');
model.selection('sel9').label('Explicit 9');
model.selection('sel10').label('Bonding wire Boundaries');
model.selection('sel10').label('Explicit 10');
model.selection('sel11').label('Focusing Electrode Boundaries');
model.selection('sel11').label('Explicit 11');

model.view('view8').tag('view81');
model.view('view4').tag('view8');
model.view('view5').tag('view4');
model.view('view9').tag('view91');
model.view('view6').tag('view9');
model.view('view7').tag('view5');
model.view('view81').tag('view6');
model.view('view91').tag('view7');
model.view('view1').hideObjects.create('hide1');

model.material.create('mat1', 'Common', 'comp1');
model.material.create('mat2', 'Common', 'comp1');
model.material.create('mat3', 'Common', 'comp1');
model.material.create('mat4', 'Common', 'comp1');
model.material('mat1').selection.named('sel12');
model.material('mat1').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat1').propertyGroup.create('Murnaghan', 'Murnaghan');
model.material('mat1').propertyGroup.create('Lame', ['Lam' native2unicode(hex2dec({'00' 'e9'}), 'unicode') ' parameters']);
model.material('mat2').selection.named('sel2');
model.material('mat2').propertyGroup.create('Enu', 'Young''s modulus and Poisson''s ratio');
model.material('mat2').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat3').selection.named('com2');
model.material('mat3').propertyGroup('def').func.create('eta', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('Cp', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('rho', 'Analytic');
model.material('mat3').propertyGroup('def').func.create('k', 'Piecewise');
model.material('mat3').propertyGroup('def').func.create('cs', 'Analytic');
model.material('mat3').propertyGroup.create('RefractiveIndex', 'Refractive index');
model.material('mat4').selection.named('sel8');

model.physics.create('es1', 'Electrostatics', 'geom1');
model.physics('es1').identifier('es1');
model.physics('es1').field('electricpotential').field('V1');
model.physics('es1').create('pot1', 'ElectricPotential', 2);
model.physics('es1').feature('pot1').selection.set([10]);
model.physics('es1').create('pot2', 'ElectricPotential', 2);
model.physics('es1').feature('pot2').selection.named('sel9');
model.physics('es1').create('pot3', 'ElectricPotential', 2);
model.physics('es1').feature('pot3').selection.named('sel11');
model.physics('es1').create('gnd2', 'Ground', 2);
model.physics('es1').feature('gnd2').selection.named('sel10');
model.physics('es1').create('gnd3', 'Ground', 2);
model.physics('es1').feature('gnd3').selection.set([3 184]);
model.physics('es1').create('pc1', 'PeriodicCondition', 2);
model.physics('es1').feature('pc1').selection.set([8 233]);
model.physics('es1').create('pc2', 'PeriodicCondition', 2);
model.physics('es1').feature('pc2').selection.set([2 231]);
model.physics('es1').create('pc3', 'PeriodicCondition', 2);
model.physics('es1').feature('pc3').selection.set([7 236]);
model.physics('es1').create('pc4', 'PeriodicCondition', 2);
model.physics('es1').feature('pc4').selection.set([1 234]);
model.physics('es1').create('pc5', 'PeriodicCondition', 2);
model.physics('es1').feature('pc5').selection.set([212 217]);
model.physics('es1').create('pc6', 'PeriodicCondition', 2);
model.physics('es1').feature('pc6').selection.set([210 215]);

model.mesh('mesh1').create('ftet2', 'FreeTet');
model.mesh('mesh1').feature('ftet2').selection.geom('geom1', 3);
model.mesh('mesh1').feature('ftet2').selection.all;
model.mesh('mesh1').feature('ftet2').create('size1', 'Size');
model.mesh('mesh1').feature('ftet2').create('size3', 'Size');
model.mesh('mesh1').feature('ftet2').feature('size1').selection.named('sel1');
model.mesh('mesh1').feature('ftet2').feature('size3').selection.named('sel3');

model.result.table.create('evl3', 'Table');

model.view('view1').set('transparency', 'on');
model.view('view1').set('showlabels', true);
model.view('view1').set('showDirections', true);
model.view('view1').hideObjects('hide1').set({});
model.view('view4').label('View 4.1');
model.view('view5').label('View 5');
model.view('view5').axis.set('abstractviewxscale', '0.025569722056388855');
model.view('view5').axis.set('ymin', '-8.117720603942871');
model.view('view5').axis.set('xmax', '14.140402793884277');
model.view('view5').axis.set('abstractviewyscale', '0.025569722056388855');
model.view('view5').axis.set('abstractviewbratio', '-0.4279248118400574');
model.view('view5').axis.set('abstractviewtratio', '0.37607526779174805');
model.view('view5').axis.set('abstractviewrratio', '0.6120333671569824');
model.view('view5').axis.set('xmin', '-10.17640209197998');
model.view('view5').axis.set('abstractviewlratio', '-0.3466072976589203');
model.view('view5').axis.set('ymax', '7.658796310424805');
model.view('view6').label('View 6.1');
model.view('view6').axis.set('abstractviewxscale', '0.020238572731614113');
model.view('view6').axis.set('ymin', '-6.43733024597168');
model.view('view6').axis.set('xmax', '10.517763137817383');
model.view('view6').axis.set('abstractviewyscale', '0.020238572731614113');
model.view('view6').axis.set('abstractviewbratio', '-0.8111522793769836');
model.view('view6').axis.set('abstractviewtratio', '0.6620014905929565');
model.view('view6').axis.set('abstractviewrratio', '0.9450734257698059');
model.view('view6').axis.set('xmin', '-8.729120254516602');
model.view('view6').axis.set('abstractviewlratio', '-0.6387177109718323');
model.view('view6').axis.set('ymax', '6.049868583679199');
model.view('view7').label('View 7');
model.view('view7').axis.set('abstractviewxscale', '0.005049801431596279');
model.view('view7').axis.set('ymin', '-0.049172163009643555');
model.view('view7').axis.set('xmax', '-0.2765793800354004');
model.view('view7').axis.set('abstractviewyscale', '0.005049800965934992');
model.view('view7').axis.set('abstractviewbratio', '-0.002458596136420965');
model.view('view7').axis.set('abstractviewtratio', '-0.8466722369194031');
model.view('view7').axis.set('abstractviewrratio', '-0.5276579260826111');
model.view('view7').axis.set('xmin', '-5.078940391540527');
model.view('view7').axis.set('abstractviewlratio', '-0.007894039154052734');
model.view('view7').axis.set('ymax', '3.0665550231933594');
model.view('view8').label('View 8');
model.view('view8').axis.set('abstractviewxscale', '0.015439675189554691');
model.view('view8').axis.set('xextra', {});
model.view('view8').axis.set('ymin', '-4.546633243560791');
model.view('view8').axis.set('xmax', '8.752728462219238');
model.view('view8').axis.set('abstractviewyscale', '0.015439675189554691');
model.view('view8').axis.set('abstractviewbratio', '-0.04999997094273567');
model.view('view8').axis.set('abstractviewtratio', '0.04999997094273567');
model.view('view8').axis.set('abstractviewrratio', '0.2341565638780594');
model.view('view8').axis.set('xmin', '-8.752728462219238');
model.view('view8').axis.set('abstractviewlratio', '-0.2341565638780594');
model.view('view8').axis.set('yextra', {});
model.view('view8').axis.set('ymax', '4.546633243560791');
model.view('view9').label('View 9');

model.material('mat1').label('Aluminum');
model.material('mat1').set('family', 'aluminum');
model.material('mat1').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('heatcapacity', '900[J/(kg*K)]');
model.material('mat1').propertyGroup('def').set('thermalconductivity', {'238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]' '0' '0' '0' '238[W/(m*K)]'});
model.material('mat1').propertyGroup('def').set('electricconductivity', {'3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]' '0' '0' '0' '3.774e7[S/m]'});
model.material('mat1').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat1').propertyGroup('def').set('thermalexpansioncoefficient', {'23e-6[1/K]' '0' '0' '0' '23e-6[1/K]' '0' '0' '0' '23e-6[1/K]'});
model.material('mat1').propertyGroup('def').set('density', '2700[kg/m^3]');
model.material('mat1').propertyGroup('Enu').set('youngsmodulus', '70e9[Pa]');
model.material('mat1').propertyGroup('Enu').set('poissonsratio', '0.33');
model.material('mat1').propertyGroup('Murnaghan').set('l', '');
model.material('mat1').propertyGroup('Murnaghan').set('m', '');
model.material('mat1').propertyGroup('Murnaghan').set('n', '');
model.material('mat1').propertyGroup('Murnaghan').set('l', '-2.5e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('m', '-3.3e11[Pa]');
model.material('mat1').propertyGroup('Murnaghan').set('n', '-3.5e11[Pa]');
model.material('mat1').propertyGroup('Lame').set('lambLame', '');
model.material('mat1').propertyGroup('Lame').set('muLame', '');
model.material('mat1').propertyGroup('Lame').set('lambLame', '5.1e10[Pa]');
model.material('mat1').propertyGroup('Lame').set('muLame', '2.6e10[Pa]');
model.material('mat2').label('Silicon');
model.material('mat2').set('diffuse', 'custom');
model.material('mat2').set('noise', 'on');
model.material('mat2').set('roughness', '0.5');
model.material('mat2').set('family', 'custom');
model.material('mat2').set('specular', 'custom');
model.material('mat2').set('customambient', {'0.6666666666666666' '0.6666666666666666' '0.7058823529411765'});
model.material('mat2').set('noisefreq', '1');
model.material('mat2').set('customspecular', {'0.7843137254901961' '1' '1'});
model.material('mat2').set('lighting', 'cooktorrance');
model.material('mat2').set('ambient', 'custom');
model.material('mat2').set('fresnel', '0.7');
model.material('mat2').set('customdiffuse', {'0.6666666666666666' '0.6666666666666666' '0.7058823529411765'});
model.material('mat2').set('roughness', '0.5');
model.material('mat2').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat2').propertyGroup('def').set('electricconductivity', {'1e-12[S/m]' '0' '0' '0' '1e-12[S/m]' '0' '0' '0' '1e-12[S/m]'});
model.material('mat2').propertyGroup('def').set('thermalexpansioncoefficient', {'2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]' '0' '0' '0' '2.6e-6[1/K]'});
model.material('mat2').propertyGroup('def').set('heatcapacity', '700[J/(kg*K)]');
model.material('mat2').propertyGroup('def').set('relpermittivity', {'11.7' '0' '0' '0' '11.7' '0' '0' '0' '11.7'});
model.material('mat2').propertyGroup('def').set('density', '2329[kg/m^3]');
model.material('mat2').propertyGroup('def').set('thermalconductivity', {'130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]' '0' '0' '0' '130[W/(m*K)]'});
model.material('mat2').propertyGroup('Enu').set('youngsmodulus', '170e9[Pa]');
model.material('mat2').propertyGroup('Enu').set('poissonsratio', '0.28');
model.material('mat2').propertyGroup('RefractiveIndex').set('n', '');
model.material('mat2').propertyGroup('RefractiveIndex').set('ki', '');
model.material('mat2').propertyGroup('RefractiveIndex').set('n', {'3.48' '0' '0' '0' '3.48' '0' '0' '0' '3.48'});
model.material('mat2').propertyGroup('RefractiveIndex').set('ki', {'0' '0' '0' '0' '0' '0' '0' '0' '0'});
model.material('mat3').label('Gas');
model.material('mat3').set('family', 'air');
model.material('mat3').propertyGroup('def').func('eta').set('pieces', {'200.0' '1600.0' '-8.38278E-7+8.35717342E-8*T^1-7.69429583E-11*T^2+4.6437266E-14*T^3-1.06585607E-17*T^4'});
model.material('mat3').propertyGroup('def').func('eta').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('Cp').set('pieces', {'200.0' '1600.0' '1047.63657-0.372589265*T^1+9.45304214E-4*T^2-6.02409443E-7*T^3+1.2858961E-10*T^4'});
model.material('mat3').propertyGroup('def').func('Cp').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('rho').set('args', {'pA' 'T'});
model.material('mat3').propertyGroup('def').func('rho').set('expr', 'pA*0.02897/8.314/T');
model.material('mat3').propertyGroup('def').func('rho').set('dermethod', 'manual');
model.material('mat3').propertyGroup('def').func('rho').set('plotargs', {'pA' '0' '1'; 'T' '0' '1'});
model.material('mat3').propertyGroup('def').func('rho').set('argders', {'pA' 'd(pA*0.02897/8.314/T,pA)'; 'T' 'd(pA*0.02897/8.314/T,T)'});
model.material('mat3').propertyGroup('def').func('k').set('pieces', {'200.0' '1600.0' '-0.00227583562+1.15480022E-4*T^1-7.90252856E-8*T^2+4.11702505E-11*T^3-7.43864331E-15*T^4'});
model.material('mat3').propertyGroup('def').func('k').set('arg', 'T');
model.material('mat3').propertyGroup('def').func('cs').set('args', {'T'});
model.material('mat3').propertyGroup('def').func('cs').set('expr', 'sqrt(1.4*287*T)');
model.material('mat3').propertyGroup('def').func('cs').set('dermethod', 'manual');
model.material('mat3').propertyGroup('def').func('cs').set('plotargs', {'T' '0' '1'});
model.material('mat3').propertyGroup('def').func('cs').set('argders', {'T' 'd(sqrt(1.4*287*T),T)'});
model.material('mat3').propertyGroup('def').set('relpermeability', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('relpermittivity', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('def').set('dynamicviscosity', 'eta(T[1/K])[Pa*s]');
model.material('mat3').propertyGroup('def').set('ratioofspecificheat', '1.4');
model.material('mat3').propertyGroup('def').set('electricconductivity', {'0[S/m]' '0' '0' '0' '0[S/m]' '0' '0' '0' '0[S/m]'});
model.material('mat3').propertyGroup('def').set('heatcapacity', 'Cp(T[1/K])[J/(kg*K)]');
model.material('mat3').propertyGroup('def').set('density', 'rho(pA[1/Pa],T[1/K])[kg/m^3]');
model.material('mat3').propertyGroup('def').set('thermalconductivity', {'k(T[1/K])[W/(m*K)]' '0' '0' '0' 'k(T[1/K])[W/(m*K)]' '0' '0' '0' 'k(T[1/K])[W/(m*K)]'});
model.material('mat3').propertyGroup('def').set('soundspeed', 'cs(T[1/K])[m/s]');
model.material('mat3').propertyGroup('def').addInput('temperature');
model.material('mat3').propertyGroup('def').addInput('pressure');
model.material('mat3').propertyGroup('RefractiveIndex').set('n', '');
model.material('mat3').propertyGroup('RefractiveIndex').set('ki', '');
model.material('mat3').propertyGroup('RefractiveIndex').set('n', {'1' '0' '0' '0' '1' '0' '0' '0' '1'});
model.material('mat3').propertyGroup('RefractiveIndex').set('ki', {'0' '0' '0' '0' '0' '0' '0' '0' '0'});
model.material('mat4').label('Insulator');
model.material('mat4').propertyGroup('def').set('relpermittivity', {'4' '0' '0' '0' '4' '0' '0' '0' '4'});

model.coordSystem('sys1').set('frametype', 'geometry');

model.physics('es1').label('Electrostatics');
model.physics('es1').prop('MeshControl').set('EnableMeshControl', '1');
model.physics('es1').feature('pot1').set('V0', 'V_Cathode');
model.physics('es1').feature('pot1').label('V Cathode');
model.physics('es1').feature('pot2').set('V0', 'V_TMElectrode');
model.physics('es1').feature('pot2').label('V TMElectrode');
model.physics('es1').feature('pot3').set('V0', 'V_FocusElectrode');
model.physics('es1').feature('pot3').label('V Focusing Electrode');
model.physics('es1').feature('gnd2').label('Bonding wires on gnd');
model.physics('es1').feature('gnd3').label('PCB on gnd');

model.mesh('mesh1').feature('size').set('hauto', 4);
model.mesh('mesh1').feature('ftet2').label('Free Tetrahedral 1');
model.mesh('mesh1').feature('ftet2').feature('size1').set('custom', 'on');
model.mesh('mesh1').feature('ftet2').feature('size1').set('hminactive', true);
model.mesh('mesh1').feature('ftet2').feature('size1').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet2').feature('size1').set('hmin', 'FocusElectrode_mesh_min');
model.mesh('mesh1').feature('ftet2').feature('size1').set('hmax', 'FocusElectrode_mesh_max');
model.mesh('mesh1').feature('ftet2').feature('size3').label('Size 2');
model.mesh('mesh1').feature('ftet2').feature('size3').set('hauto', 2);
model.mesh('mesh1').feature('ftet2').feature('size3').set('custom', 'on');
model.mesh('mesh1').feature('ftet2').feature('size3').set('hminactive', true);
model.mesh('mesh1').feature('ftet2').feature('size3').set('hmaxactive', true);
model.mesh('mesh1').feature('ftet2').feature('size3').set('hmin', 'TMElectrode_mesh_min');
model.mesh('mesh1').feature('ftet2').feature('size3').set('hmax', 'TMElectrode_mesh_max');
model.mesh('mesh1').run;

model.result.table('evl3').label('Evaluation 3D');
model.result.table('evl3').comments('Interactive 3D values');

model.study.create('std1');
model.study('std1').create('stat', 'Stationary');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('s1', 'Stationary');
model.sol('sol1').feature('s1').create('se1', 'Segregated');
model.sol('sol1').feature('s1').create('i1', 'Iterative');
model.sol('sol1').feature('s1').create('i2', 'Iterative');
model.sol('sol1').feature('s1').feature('se1').create('ss1', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').create('ss2', 'SegregatedStep');
model.sol('sol1').feature('s1').feature('se1').feature.remove('ssDef');
model.sol('sol1').feature('s1').feature('i1').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature('i2').create('mg1', 'Multigrid');
model.sol('sol1').feature('s1').feature.remove('fcDef');

model.study('std1').feature('stat').set('initstudyhide', 'on');
model.study('std1').feature('stat').set('initsolhide', 'on');
model.study('std1').feature('stat').set('solnumhide', 'on');
model.study('std1').feature('stat').set('notstudyhide', 'on');
model.study('std1').feature('stat').set('notsolhide', 'on');
model.study('std1').feature('stat').set('notsolnumhide', 'on');

model.result.create('pg1', 'PlotGroup3D');
model.result.create('pg2', 'PlotGroup3D');
model.result('pg1').create('mslc1', 'Multislice');
model.result('pg1').feature('mslc1').set('data', 'dset1');
model.result('pg2').create('str1', 'Streamline');
model.result.export.create('plot1', 'Plot');

model.sol('sol1').attach('std1');
model.sol('sol1').label('Solver 1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('linsolver', 'i1');
model.sol('sol1').feature('s1').feature('se1').feature('ss1').set('segvar', {'comp1_V1'});
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('linsolver', 'i2');
model.sol('sol1').feature('s1').feature('se1').feature('ss2').set('segvar', {'comp1_V1'});
model.sol('sol1').feature('s1').feature('i1').set('linsolver', 'cg');
model.sol('sol1').feature('s1').feature('i1').feature('mg1').set('prefun', 'amg');
model.sol('sol1').feature('s1').feature('i2').set('linsolver', 'cg');
model.sol('sol1').feature('s1').feature('i2').feature('mg1').set('prefun', 'amg');

model.result.dataset('dset1').label('Solution 1');
model.result('pg1').label('Electric Field');
model.result('pg1').set('showlegendsmaxmin', true);
model.result('pg1').set('frametype', 'spatial');
model.result('pg1').feature('mslc1').set('unit', 'V/m');
model.result('pg1').feature('mslc1').set('expr', 'es1.normE');
model.result('pg1').feature('mslc1').set('rangecolormin', '300');
model.result('pg1').feature('mslc1').set('rangedatamax', '1.8e6');
model.result('pg1').feature('mslc1').set('znumber', '0');
model.result('pg1').feature('mslc1').set('descr', 'Electric field norm');
model.result('pg1').feature('mslc1').set('rangedatamin', '300');
model.result('pg1').feature('mslc1').set('rangecoloractive', 'on');
model.result('pg1').feature('mslc1').set('rangedataactive', 'on');
model.result('pg1').feature('mslc1').set('rangecolormax', '1.8e6');
model.result('pg2').label('Streamline');
model.result('pg2').set('showlegendsmaxmin', true);
model.result('pg2').set('frametype', 'spatial');
model.result('pg2').feature('str1').label('Streamline_es1');
model.result('pg2').feature('str1').set('posmethod', 'start');
model.result('pg2').feature('str1').set('zcoord', '19.9');
model.result('pg2').feature('str1').set('descr', '');
model.result('pg2').feature('str1').set('startmethod', 'coord');
model.result('pg2').feature('str1').set('resolution', 'fine');
model.result('pg2').feature('str1').set('ycoord', '-4.07032, -4.07032, -4.07032, -4.07032, -4.07032, -4.07032, -4.07032, -4.07032, -4.07032, -4.07032, -3.61806, -3.61806, -3.61806, -3.61806, -3.61806, -3.61806, -3.61806, -3.61806, -3.61806, -3.61806, -3.61806, -3.1658, -3.1658, -3.1658, -3.1658, -3.1658, -3.1658, -3.1658, -3.1658, -3.1658, -3.1658, -3.1658, -3.1658, -2.71355, -2.71355, -2.71355, -2.71355, -2.71355, -2.71355, -2.71355, -2.71355, -2.71355, -2.71355, -2.71355, -2.71355, -2.71355, -2.26129, -2.26129, -2.26129, -2.26129, -2.26129, -2.26129, -2.26129, -2.26129, -2.26129, -2.26129, -2.26129, -2.26129, -2.26129, -2.26129, -1.80903, -1.80903, -1.80903, -1.80903, -1.80903, -1.80903, -1.80903, -1.80903, -1.80903, -1.80903, -1.80903, -1.80903, -1.80903, -1.80903, -1.80903, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -1.35677, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.904515, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, -0.452258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.452258, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 0.904515, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.35677, 1.80903, 1.80903, 1.80903, 1.80903, 1.80903, 1.80903, 1.80903, 1.80903, 1.80903, 1.80903, 1.80903, 1.80903, 1.80903, 1.80903, 1.80903, 2.26129, 2.26129, 2.26129, 2.26129, 2.26129, 2.26129, 2.26129, 2.26129, 2.26129, 2.26129, 2.26129, 2.26129, 2.26129, 2.26129, 2.71355, 2.71355, 2.71355, 2.71355, 2.71355, 2.71355, 2.71355, 2.71355, 2.71355, 2.71355, 2.71355, 2.71355, 2.71355, 3.1658, 3.1658, 3.1658, 3.1658, 3.1658, 3.1658, 3.1658, 3.1658, 3.1658, 3.1658, 3.1658, 3.1658, 3.61806, 3.61806, 3.61806, 3.61806, 3.61806, 3.61806, 3.61806, 3.61806, 3.61806, 3.61806, 3.61806, 4.07032, 4.07032, 4.07032, 4.07032, 4.07032, 4.07032, 4.07032, 4.07032, 4.07032, 4.07032');
model.result('pg2').feature('str1').set('back', false);
model.result('pg2').feature('str1').set('xcoord', '-2.35, -1.82778, -1.30556, -0.783333, -0.261111, 0.261111, 0.783333, 1.30556, 1.82778, 2.35, -2.61111, -2.08889, -1.56667, -1.04444, -0.522222, 0, 0.522222, 1.04444, 1.56667, 2.08889, 2.61111, -2.87222, -2.35, -1.82778, -1.30556, -0.783333, -0.261111, 0.261111, 0.783333, 1.30556, 1.82778, 2.35, 2.87222, -3.13333, -2.61111, -2.08889, -1.56667, -1.04444, -0.522222, 0, 0.522222, 1.04444, 1.56667, 2.08889, 2.61111, 3.13333, -3.39444, -2.87222, -2.35, -1.82778, -1.30556, -0.783333, -0.261111, 0.261111, 0.783333, 1.30556, 1.82778, 2.35, 2.87222, 3.39444, -3.65556, -3.13333, -2.61111, -2.08889, -1.56667, -1.04444, -0.522222, 0, 0.522222, 1.04444, 1.56667, 2.08889, 2.61111, 3.13333, 3.65556, -3.91667, -3.39444, -2.87222, -2.35, -1.82778, -1.30556, -0.783333, -0.261111, 0.261111, 0.783333, 1.30556, 1.82778, 2.35, 2.87222, 3.39444, 3.91667, -4.17778, -3.65556, -3.13333, -2.61111, -2.08889, -1.56667, -1.04444, -0.522222, 0, 0.522222, 1.04444, 1.56667, 2.08889, 2.61111, 3.13333, 3.65556, 4.17778, -4.43889, -3.91667, -3.39444, -2.87222, -2.35, -1.82778, -1.30556, -0.783333, -0.261111, 0.261111, 0.783333, 1.30556, 1.82778, 2.35, 2.87222, 3.39444, 3.91667, 4.43889, -4.7, -4.17778, -3.65556, -3.13333, -2.61111, -2.08889, -1.56667, -1.04444, -0.522222, 0, 0.522222, 1.04444, 1.56667, 2.08889, 2.61111, 3.13333, 3.65556, 4.17778, 4.7, -4.43889, -3.91667, -3.39444, -2.87222, -2.35, -1.82778, -1.30556, -0.783333, -0.261111, 0.261111, 0.783333, 1.30556, 1.82778, 2.35, 2.87222, 3.39444, 3.91667, 4.43889, -4.17778, -3.65556, -3.13333, -2.61111, -2.08889, -1.56667, -1.04444, -0.522222, 0, 0.522222, 1.04444, 1.56667, 2.08889, 2.61111, 3.13333, 3.65556, 4.17778, -3.91667, -3.39444, -2.87222, -2.35, -1.82778, -1.30556, -0.783333, -0.261111, 0.261111, 0.783333, 1.30556, 1.82778, 2.35, 2.87222, 3.39444, 3.91667, -3.65556, -3.13333, -2.61111, -2.08889, -1.56667, -1.04444, -0.522222, 0, 0.522222, 1.04444, 1.56667, 2.08889, 2.61111, 3.13333, 3.65556, -3.39444, -2.87222, -2.35, -1.82778, -1.30556, -0.783333, -0.261111, 0.261111, 0.783333, 1.30556, 1.82778, 2.35, 2.87222, 3.39444, -3.13333, -2.61111, -2.08889, -1.56667, -1.04444, -0.522222, 0, 0.522222, 1.04444, 1.56667, 2.08889, 2.61111, 3.13333, -2.87222, -2.35, -1.82778, -1.30556, -0.783333, -0.261111, 0.261111, 0.783333, 1.30556, 1.82778, 2.35, 2.87222, -2.61111, -2.08889, -1.56667, -1.04444, -0.522222, 0, 0.522222, 1.04444, 1.56667, 2.08889, 2.61111, -2.35, -1.82778, -1.30556, -0.783333, -0.261111, 0.261111, 0.783333, 1.30556, 1.82778, 2.35');
model.result('pg2').feature('str1').set('expr', {'-es1.Ex' '-es1.Ey' '-es1.Ez'});
model.result.export('plot1').label('Streamline');
model.result.export('plot1').set('plotgroup', 'pg2');
model.result.export('plot1').set('plot', 'str1');
model.result.export('plot1').set('filename', 'sl.dat');
model.result.export('plot1').set('fullprec', false);

out = model;
